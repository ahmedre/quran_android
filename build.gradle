buildscript {
  ext {
    kotlinVersion = '1.3.41'
    daggerVersion = '2.23.2'
    androidxVersion = '1.0.0'
    androidxMediaVersion = '1.0.1'
    androidxPreferencesVersion = '1.1.0-rc01'
    androidxAppcompatVersion = '1.1.0-rc01'
    espressoVersion = '3.1.0-beta02'
    // note - 3.13.x and above require minSdk 21
    okhttpVersion = '3.12.3'

    deps = [
        android: [
            build: [
                minSdkVersion    : 14,
                targetSdkVersion : 28,
                compileSdkVersion: 28
            ]
        ],
        kotlin: [
            stdlib: "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"
        ],
        dagger: [
            apt: "com.google.dagger:dagger-compiler:${daggerVersion}",
            runtime: "com.google.dagger:dagger:${daggerVersion}"
        ]
    ]
  }

  // workaround for proguard failing to parse moshi's proguard rules
  buildscript {
    configurations.all {
        resolutionStrategy {
            force 'net.sf.proguard:proguard-gradle:6.1.0beta2'
        }
    }
  }

  repositories {
    google()
    jcenter()
    maven { url 'https://maven.fabric.io/public' }
    maven { url 'https://plugins.gradle.org/m2/' }
  }

  dependencies {
    classpath 'com.android.tools.build:gradle:3.5.0-beta05'
    classpath "io.fabric.tools:gradle:1.27.1"
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    classpath "net.ltgt.gradle:gradle-errorprone-plugin:0.0.13"
  }
}

allprojects {
  repositories {
    google()
    jcenter()
    maven { url 'https://maven.fabric.io/public' }
  }

  tasks.withType(JavaCompile).all {
    options.compilerArgs += [
        '-Adagger.formatGeneratedSource=disabled',
        '-Adagger.gradle.incremental=enabled'
    ]
  }

  afterEvaluate {
    extensions.findByName('kapt')?.arguments {
      arg("dagger.formatGeneratedSource", "disabled")
      arg("dagger.gradle.incremental", "enabled")
    }
  }
}
